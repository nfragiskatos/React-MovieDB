{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","Error","console","log","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","SearchForm","onSubmit","e","preventDefault","className","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","key","to","src","alt","Home","SingleMovie","useParams","plot","Plot","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEMA,EAAY,0CAAsCC,YAmCzCC,EAjCE,SAACC,GAAe,IAAD,EACKC,oBAAS,GADd,mBACvBC,EADuB,KACZC,EADY,OAEHF,mBAAS,CAAEG,MAAM,EAAOC,IAAK,KAF1B,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGLN,mBAAS,MAHJ,mBAGvBO,EAHuB,KAGjBC,EAHiB,KAKzBC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBT,GAAa,GADM,kBAGKU,MAAMF,GAHX,cAGZG,EAHY,gBAICA,EAASC,OAJV,OAMI,UAFhBP,EAJY,QAMTQ,UACRP,EAAQD,EAAKS,QAAUT,GACvBD,EAAS,CAAEH,MAAM,EAAOC,IAAK,MAE7BE,EAAS,CAAEH,MAAM,EAAMC,IAAKG,EAAKU,QAElCf,GAAa,GAZK,kDAclBgB,QAAQC,IAAR,MACAjB,GAAa,GAfK,0DAAH,sDAyBjB,OANAkB,qBACC,WACCX,EAAY,GAAD,OAAIb,GAAJ,OAAmBG,MAE/B,CAAEA,IAEI,CAAEE,YAAWI,QAAOE,SC7BtBc,GAFmB,0CAAsCxB,YAE5CyB,IAAMC,iBAEnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTzB,mBAAS,YADA,mBAC7B0B,EAD6B,KACtBC,EADsB,OAEM7B,EAAS,MAAD,OAAO4B,IAAlDzB,EAF6B,EAE7BA,UAAWI,EAFkB,EAElBA,MAAauB,EAFK,EAEXrB,KAE1B,OAAO,kBAACc,EAAWQ,SAAZ,CAAqBC,MAAO,CAAE7B,YAAWI,QAAOuB,SAAQF,QAAOC,aAAaF,IAGvEM,EAAmB,WAC/B,OAAOC,qBAAWX,ICDJY,EAZI,WAAO,IAAD,EACWF,IAA3B1B,EADgB,EAChBA,MAAOqB,EADS,EACTA,MAAOC,EADE,EACFA,SAEtB,OACC,0BAAMO,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAkBC,UAAU,eACpD,6CACA,2BAAOC,KAAK,OAAOD,UAAU,aAAaP,MAAOJ,EAAOa,SAAU,SAACJ,GAAD,OAAOR,EAASQ,EAAEK,OAAOV,UAC1FzB,EAAMF,MAAQ,yBAAKkC,UAAU,SAAShC,EAAMD,O,OCsBjCqC,EA1BA,WAAO,IAAD,EACUV,IAAtBH,EADY,EACZA,OAER,OAHoB,EACJ3B,UAGR,yBAAKoC,UAAU,YAGtB,6BAASA,UAAU,UACjBT,EAAOc,KAAI,SAACC,GAAW,IACPC,EAAiDD,EAAzDE,OAAoBC,EAAqCH,EAA7CI,OAAuBC,EAAsBL,EAA7BM,MAAoBC,EAASP,EAAfQ,KAClD,OACC,kBAAC,IAAD,CAAMC,IAAKR,EAAIS,GAAE,kBAAaT,GAAMP,UAAU,SAC7C,iCACC,yBAAKiB,IAAgB,QAAXR,EAfL,+EAe8BA,EAAQS,IAAKP,IAChD,yBAAKX,UAAU,cACd,wBAAIA,UAAU,SAASW,GACvB,2BAAIE,WCTGM,EATF,WACZ,OACC,8BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCiCYC,EAnCK,WAAO,IAClBb,EAAOc,cAAPd,GADiB,EAEiB9C,EAAS,MAAD,OAAO8C,IAAjD3C,EAFiB,EAEjBA,UAAWI,EAFM,EAENA,MAAasC,EAFP,EAECpC,KAE1B,GAAIN,EACH,OAAO,yBAAKoC,UAAU,YAEvB,GAAIhC,EAAMF,KACT,OACC,yBAAKkC,UAAU,cACd,4BAAKhC,EAAMD,KACX,kBAAC,IAAD,CAAMiD,GAAG,IAAIhB,UAAU,OAAvB,qBAXsB,IAkBVW,EAAkDL,EAAzDM,MAAoBU,EAAqChB,EAA3CiB,KAAkBV,EAAyBP,EAA/BQ,KAAoBL,EAAWH,EAAnBI,OAE9C,OACC,6BAASV,UAAU,gBAClB,yBAAKiB,IAAgB,QAAXR,EAxBD,+EAwB0BA,EAAQS,IAAKP,IAChD,yBAAKX,UAAU,qBACd,4BAAKW,GACL,2BAAIW,GACJ,4BAAKT,GACL,kBAAC,IAAD,CAAMG,GAAG,IAAIhB,UAAU,OAAvB,uBCfWwB,MAXf,WACC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACpB,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOD,KAAK,cAAcrC,SAAU,kBAAC,EAAD,UCNvCuC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,EAAD,SAIHC,SAASC,eAAe,W","file":"static/js/main.fcd69f12.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\n\r\nconst useFetch = (urlParams) => {\r\n\tconst [ isLoading, setIsLoading ] = useState(true);\r\n\tconst [ error, setError ] = useState({ show: false, msg: '' });\r\n\tconst [ data, setData ] = useState(null);\r\n\r\n\tconst fetchMovies = async (url) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (data.Response === 'True') {\r\n\t\t\t\tsetData(data.Search || data);\r\n\t\t\t\tsetError({ show: false, msg: '' });\r\n\t\t\t} else {\r\n\t\t\t\tsetError({ show: true, msg: data.Error });\r\n\t\t\t}\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchMovies(`${API_ENDPOINT}${urlParams}`);\r\n\t\t},\r\n\t\t[ urlParams ]\r\n\t);\r\n\treturn { isLoading, error, data };\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useState, useContext } from 'react';\nimport useFetch from './useFetch';\n// make sure to use https\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n\tconst [ query, setQuery ] = useState('superman');\n\tconst { isLoading, error, data: movies } = useFetch(`&s=${query}`);\n\n\treturn <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>{children}</AppContext.Provider>;\n};\n// make sure use\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst SearchForm = () => {\n\tconst { error, query, setQuery } = useGlobalContext();\n\n\treturn (\n\t\t<form onSubmit={(e) => e.preventDefault()} className='search-form'>\n\t\t\t<h2>search movies</h2>\n\t\t\t<input type='text' className='form-input' value={query} onChange={(e) => setQuery(e.target.value)} />\n\t\t\t{error.show && <div className='error'>{error.msg}</div>}\n\t\t</form>\n\t);\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nimport { Link } from 'react-router-dom';\nconst url = 'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\n\nconst Movies = () => {\n\tconst { movies, isLoading } = useGlobalContext();\n\n\tif (isLoading) {\n\t\treturn <div className='loading' />;\n\t}\n\treturn (\n\t\t<section className='movies'>\n\t\t\t{movies.map((movie) => {\n\t\t\t\tconst { imdbID: id, Poster: poster, Title: title, Year: year } = movie;\n\t\t\t\treturn (\n\t\t\t\t\t<Link key={id} to={`/movies/${id}`} className='movie'>\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t<img src={poster === 'N/A' ? url : poster} alt={title} />\n\t\t\t\t\t\t\t<div className='movie-info'>\n\t\t\t\t\t\t\t\t<h4 className='title'>{title}</h4>\n\t\t\t\t\t\t\t\t<p>{year}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</section>\n\t);\n};\n\nexport default Movies;\n","import React from 'react';\nimport Form from './SearchForm';\nimport Movies from './Movies';\nconst Home = () => {\n\treturn (\n\t\t<main>\n\t\t\t<Form />\n\t\t\t<Movies />\n\t\t</main>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport useFetch from './useFetch';\nconst url = 'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\n\nconst SingleMovie = () => {\n\tconst { id } = useParams();\n\tconst { isLoading, error, data: movie } = useFetch(`&i=${id}`);\n\n\tif (isLoading) {\n\t\treturn <div className='loading' />;\n\t}\n\tif (error.show) {\n\t\treturn (\n\t\t\t<div className='page-error'>\n\t\t\t\t<h1>{error.msg}</h1>\n\t\t\t\t<Link to='/' className='btn'>\n\t\t\t\t\treturn to movies\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst { Title: title, Plot: plot, Year: year, Poster: poster } = movie;\n\n\treturn (\n\t\t<section className='single-movie'>\n\t\t\t<img src={poster === 'N/A' ? url : poster} alt={title} />\n\t\t\t<div className='single-movie-info'>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<p>{plot}</p>\n\t\t\t\t<h4>{year}</h4>\n\t\t\t\t<Link to='/' className='btn'>\n\t\t\t\t\treturn to movies\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default SingleMovie;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Movie from './SingleMovie';\n\nfunction App () {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path='/' exact>\n\t\t\t\t<Home />\n\t\t\t</Route>\n\t\t\t<Route path='/movies/:id' children={<Movie />} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\nimport { BrowserRouter as Router } from 'react-router-dom';\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AppProvider>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</AppProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}